import io
import os
import re
import sys
import array

from argparse import ArgumentParser

tmpl_header = '''
/* autogenerated by bin2c.py */

#include <stdlib.h>
'''
tmpl_entry_header = "const char bundle[] = {\n"
tmpl_entry_footer = "};\n"
tmpl_entry_size = "size_t bundle_size = %s;\n"
tmpl_footer = ''' '''


def output(stream, data):
    stream.write(data)


def perform_conversion(input_filename, output_filename):
    filename, ext = os.path.splitext(os.path.basename(args.input))
    filename = re.sub(r"[-/]", '_', filename)

    if not output_filename or output_filename == '-':
        stream = sys.stdout
    else:
        stream = io.open(output_filename, 'wb')

    bytes = array.array('B', open(input_filename, "rb").read())
    size = len(bytes)

    output(stream, tmpl_header)
    output(stream, tmpl_entry_header)

    i = 0
    for byte in bytes:
        if i % 8 == 0:
            output(stream, '  ')

        output(stream, "0x%02x" % byte)

        if (i + 1) < size:
            output(stream, ', ')

        if (i % 8) == 7:
            output(stream, '\n')

        i += 1

    output(stream, tmpl_entry_footer)
    output(stream, tmpl_entry_size % (size))
    output(stream, tmpl_footer)
    output(stream, '\n')
    stream.close()


if __name__ == '__main__':
    parser = ArgumentParser()
    parser.add_argument('-i', '--input', required=True, help='input file')
    parser.add_argument('-o', '--output', help='output file [default: stdout]')
    args = parser.parse_args()

    perform_conversion(args.input, args.output)
